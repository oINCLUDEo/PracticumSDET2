name: API Tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: all
        type: choice
        options:
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: mkdir -p allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  Test:
    runs-on: ubuntu-latest
    needs: download-history

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Install dependencies with Allure plugin
        run: |
          mvn clean install -DskipTests
          mvn io.qameta.allure:allure-maven:install
      - name: Run tests and generate report
        run: |
          mvn test
          mvn io.qameta.allure:allure-maven:report
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: target/allure-results
          retention-days: 1
      - name: Check allure results directory
        run: ls -al target/allure-results

  generate-report:
    runs-on: ubuntu-latest
    needs: Test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install Allure CLI
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.33.0/allure-2.33.0.tgz
          sudo tar -zxvf allure-2.33.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.33.0/bin/allure /usr/bin/allure
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Allure report
        run: |
          allure generate -c allure-results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1
      - name: Check generated report
        run: ls -al _site

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
