name: API Tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: all
        type: choice
        options:
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout API repository
        uses: actions/checkout@v2
        with:
          repository: bondarenkokate73/simbirsoft_sdet_project
          token: ${{ secrets.GITHUB_TOKEN }}
          path: api_repo

      - name: Checkout Test repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: test_repo

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker Compose
        run: |
          sudo apt-get install docker-compose
      - name: Build and run API with Docker Compose
        run: |
          cd api_repo
          docker-compose -f docker-compose.yaml up --build -d
      - name: Wait for API to be ready
        run: |
          MAX_ATTEMPTS=30  # Максимальное количество попыток
          ATTEMPT=0
          until curl -s http://localhost:8080/api/_/docs/swagger; do
            ATTEMPT=$((ATTEMPT+1))
            if [ $ATTEMPT -ge $MAX_ATTEMPTS ]; then
                echo "API not ready after $MAX_ATTEMPTS attempts."
                exit 1
                fi
                echo "Waiting for API to be ready... (Attempt $ATTEMPT of $MAX_ATTEMPTS)"
                sleep 20
          done
          echo "API is ready!"
      - name: Run tests
        run: |
          cd test_repo
          mvn test
          mvn io.qameta.allure:allure-maven:report
      - name: Upload Allure report as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: test_repo/target/allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: build-test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install Allure CLI
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.33.0/allure-2.33.0.tgz
          sudo tar -zxvf allure-2.33.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.33.0/bin/allure /usr/bin/allure
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate Allure report
        run: |
          allure generate -c allure-results -o _site
      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4